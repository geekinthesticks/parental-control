:SETUP:
#+drawers: SETUP NOTES PROPERTIES
#+title: Configuration.
:END:

* Overview.
Listed below are the minimum configuration files you need. There are
many more possible options, but these should provide a minimum working
example.

Almost all distros have squid, ISC dhcp server and Shorewall in their
repos, so initial installation should be straightforward.

** A Note for Non Emacs Users.
You may be wondering what all this tangle noweb stuff is in the
configuration files below. It lets me generate the configuration files
directly from this document, so the documentation and configuration
file information is all kept in the same document (aka Literate Programming).

You can find more information at [[http://org-mode.org][org-mode]] and [[http://orgmode.org/worg/org-contrib/babel/][active code]] in org-mode.

** OpenDNS.
You will need an account at http://www.opendns.com/ to use the
service. The basic account is free. You need to change the address
that your router uses to look up DNS records to use OpenDNS
servers. These are currently 208.67.222.222 and 208.67.220.220. Once
you have done this you can use the OpenDNS web interface to configure
your web content filtering.

** Squid.
The default squid configuration file has literally hundreds of
options. My example configuration file contains only the options
required to work in my setup.

By default Squid listens on port 3128. You can change this to another
port if you wish. One problem is how do you configure all your devices
to use Squid? You could configure each device to use a proxy server on
port 3128, but doing this on every phone, tablet and computer that
might be connected to your network is impractical. One solution is to
set up Squid as a transparent proxy. The simplest way to do this is to install
Squid on your firewall/router and then redirect every request to port 80, except one
that comes from the firewall itself, to Squid on port 3128. Note that
Squid won't proxy requests to secure servers (https).

I use a Shorewall rule to do the squid redirection, but you can just
add the relevant ip chains rule yourself:

#+begin_src shell
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3128
#+end_src

You would need to place this in a file that is executed on every boot,
for example /etc/rc.local. Proper geeks will of course write a systemd
service to do this.

The following shell snippet may also be useful. I can't remember where
I found it, so unfortunately I can't credit the person who wrote
it. It filters out all commented lines in squid.conf and just displays
any active configuration rules. Given that the default squid.conf is
>100 lines long, this can be very useful.

#+begin_src shell
grep -v "^#" /etc/squid/squid.conf | sed -e '/^$/d'
#+end_src

*** Useful Squid Resources.
- There is a good tutorial on using Squid as a transparent proxy at: http://www.tldp.org/HOWTO/TransparentProxy.html#toc5
- The [[http://squid-cache.org][main]] Squid web site.
- Squid [[http://www.squid-cache.org/Misc/log-analysis.html][log analysis]] tools.


** Setting Up Your Own dhcp server.
Most broadband routers come with a built in dhcp server, which will
automatically configure the dhcp addresses of all the devices
connected to your network. However, for maximum flexibility you will
want to run your own dhcp server. In particular we want to assign a
fixed ip address to a device to some devices using their MAC
address. This makes it much easier to control the access these devices
have to the internet. You may find that your router's built in dhcp
server will let you assign a fixed ip address to a particular MAC
address, in which case you can just go ahead and use the built in dhcp
server.

In case you were wondering what a MAC address is, it's a unique number
assigned to each network device. While it's possible to spoof MAC
addresses, they are generally considered to be a unique identifier for
a device.

To find the MAC address for a device:

#+begin_src shell
sudo ifconfig -a
#+end_src

For devices where it's not easy to run a shell e.g. phones and tablets
once you have the dhcp server running, just look at your syslog

#+begin_src shell
Dec 16 09:17:49 localhost dhcpd: DHCPREQUEST for 192.168.0.223 from 00:01:6c:6c:c7:6b (myth2) via eth0
#+end_src

Here "00:01:6c:6c:c7:6b" is the MAC address.

I prefer to use the ISC dhcp server, but other alternatives are
available e.g. dnsmasq. The ISC server has many
configuration options, which are documented in the example
configuration file shipped with most distros. My example file is a
minimal one that will get you up and running.

*** Useful dhcp Server Resources.
- [[https://wiki.debian.org/DHCP_Server][Debian]] wiki article.
- [[http://www.thekelleys.org.uk/dnsmasq/doc.html][dnsmasq]] lightweight and easy configure dns and dhcp server.

** Setting Up Your Own Firewall.
Not yet implemented.
* Configuration Files.
These are the basic configuration files. They aren't intended to be
exhaustive, but should give you a good start. The actual configuration
files are generated from this document and can be found in the
configuration_files directory.

** ISC dhcp server.
A basic dhcp server that allocates dynamic addresses in the 192.168.0.100 -
192.168.0.248 range. Addresses below 192.168.0.100 are allocated as
fixed ip's based on the devices MAC address.

#+begin_src sh :tangle  ./configuration_files/dhcpd.conf :exports none :noweb yes
ddns-update-style none;
ignore client-updates;
authoritative;
option local-wpad code 252 = text;

# Don't need this if we aren't runing our own DNS server.
#include "/etc/named/rndc.key";

subnet 192.168.0.0 netmask 255.255.255.0 {

    pool {
             # Assign dhcp addresses in the range below.
             # I reserve ip addresses below 192.168.0.100
             # for static ip's.
             range 192.168.0.100 192.168.0.248;
             max-lease-time 1800; # 30 minutes
             allow unknown-clients;
    }

    # The ip address of your router.
    option routers 192.168.0.1;
    option broadcast-address 192.168.0.255;

    # A couple of examples of assigning fixed ip addresses using
    # a devices MAC address.
    host john {
         hardware ethernet 00:22:5f:b1:ca:2f;
         fixed-address 192.168.0.40;

    }


    host nexus7 {
         hardware ethernet 08:60:6e:3d:3b:93;
         fixed-address 192.168.0.63;

    }


}




#+end_src

** Squid.
 An example Squid configuration that regulates the times various devices
can access the internet via port 80. Additionally, within the allowed time it will
further restrict access to streaming audio/video files to a subset of
the allowed time.

#+begin_src sh :tangle  ./configuration_files/squid.conf :exports none :noweb yes
# Note squid process rues from the bottom of the file upwards.
# So the bottom rule bans everything and then we open up permissions
# higher up in the config file.

# Squid will drop out of the operator list on the *first* match.

acl manager proto cache_object
acl localhost src 127.0.0.1/32
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32
acl my_networks src 192.168.0.0/24

# Some url regexes for detecting flash.
acl media rep_mime_type application/x-shockwave-flash
acl mediapr urlpath_regex \.swf(\?.*)?$
acl flv urlpath_regex -i .flv

# Regex to detect YouTube.
acl youtube_domains dstdomain .youtube.com .googlevideo.com .ytimg.com

# BBC iPlayer and ITV Player
acl iplayer url_regex .bbc.co.uk/iplayer
acl itvplayer url_regex itvplayer

# Include additional list of video and flash mime types to block.
acl blockfiles urlpath_regex "/etc/squid3/blocked_files.conf"

# You can define a block of ip addresses to use in
# access rules.
# These are the children's laptops.
acl children src 192.168.0.42 192.168.0.43 192.168.0.44

# Alternatively you can fine tune it by giving each device
# its own ruleset.
# These are some other devices.
acl john src 192.168.0.40
acl johnpc src 192.168.0.59
acl ps3 src 192.168.0.41
acl iphone src 192.168.0.57

# Define a time slot when the children can
# access the internet.
# There are additional rules to stop video streaming
# between certain hours.
acl working_hours time 06:00-22:00

# You can also specify days of the week.
# M = Monday, etc.
# acl officehours time MTWHFA 14:00-17:00

# Can only watch videos between these hours
acl video_hours time  20:30-23:59


acl SSL_ports port 443
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http
acl CONNECT method CONNECT
http_access allow manager localhost
http_access deny manager
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports


# Don't allow video streaming to these devices
# outside the uncapped bandwidth period.
http_access deny john blockfiles !video_hours
http_access deny john youtube_domains !video_hours
http_access deny john iplayer !video_hours
http_access deny john itvplayer !video_hours
http_access deny johnpc blockfiles !video_hours
http_access deny johnpc youtube_domains !video_hours
http_access deny johnpc iplayer !video_hours
http_access deny johnpc itvplayer !video_hours
http_access deny iphone blockfiles !video_hours
http_access deny iphone youtube_domains !video_hours
http_access deny iphone iplayer !video_hours
http_access deny iphone itvplayer !video_hours
http_access deny ps3 blockfiles !video_hours
http_access deny ps3 youtube_domains !video_hours
http_access deny ps3 iplayer !video_hours
http_access deny ps3 itvplayer !video_hours
http_access deny children iplayer !video_hours
http_access deny children itvplayer !video_hours

# Allow the localhost access.
http_access allow localhost


# General rule to allow access to all devices
# in ournetwork.
http_access allow my_networks

# Allow basic internet access. However,
# video access is further restricted by
# the rules above.
http_access allow children working_hours



# Start by denying access to everything.
http_access deny all
icp_access deny all
htcp_access deny all

http_port 3128 transparent
hierarchy_stoplist cgi-bin ?
access_log /var/log/squid3/access.log squid
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern (cgi-bin|\?)    0       0%      0
refresh_pattern .               0       20%     4320
icp_port 3130
coredump_dir /var/spool/squid3

#+end_src

#+begin_src sh :tangle  ./configuration_files/blocked_files.conf :exports none :noweb yes
# Block list for video and flash files.

^application/vnd.ms.wms-hdr.asfv1$
^application/x-mms-framed$
^audio/x-pn-realaudio$
^audio/mid$
^audio/mpeg$
^video/flv$
^video/x-flv$
^video/x-ms-asf$
^video/x-ms-asf$
^video/x-ms-wma$
^video/x-ms-wmv$
^video/x-msvideo$
^video/x-shockwave-flash$
^application/x-shockwave-flash$

#+end_src

*** Proxy Authentication.
If you have a VPS, it can be useful to set up a Squid proxy. If you
travel abroad you can then use the proxy server to access sites such as
BBC iPlayer, which block access from non UK countries. However, you
probably don't want unauthorized users hogging you network bandwidth.

The following configuration sets up a simple proxy which listens on
port 8080, but requires authentication.

#+begin_src shell

# Change this line to point to your digest_file_auth program and
# digest file.
auth_param digest program /usr/lib/squid/digest_file_auth -c /etc/squid/squid.digest
auth_param digest children 5
auth_param digest realm MyRealm



# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
# acl localnet src 10.0.0.0/8	# RFC1918 possible internal network
# acl localnet src 172.16.0.0/12	# RFC1918 possible internal network
acl localnet src 192.168.0.0/16	# RFC1918 possible internal network
acl localnet src fc00::/7       # RFC 4193 local private network range
acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines

acl home     src 46.33.134.31

acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT

acl users proxy_auth REQUIRED
http_access allow users

#
# Recommended minimum Access Permission configuration:
#
# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost


# And finally deny all other access to this proxy
http_access deny all

# Squid normally listens to port 3128
http_port 8080

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/cache/squid 256 16 256

# Leave coredumps in the first cache dir
coredump_dir /var/cache/squid

# Add any of your own refresh_pattern entries above these.
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320

#+end_src

To create the digest file holding the password

#+begin_src shell
sudo htdigest -c /etc/squid/squid.digest "MyRealm" ian

#+end_src

This will create a digest file with the user name "ian". Note the
"MyRealm" option must match whatever you called your realm in
squid.conf. Using the "-c" option will create a new file overwriting
your old one. If you want to modify an existing file omit this
option. As always "man htdigest" is your friend.

** Shorewall.
The Shorewall configuration basically follows the [[http://www.shorewall.net/two-interface.htm][two interface]] example
on the Shorewall site. Rather than repeat all this, I have simply
included my configuration files, with notes.

The files you are most likely to want to modify are interfaces rules.
The rules file controls what traffic is allowed in and out of your
network.

My interfaces are a little unusual because I run KVM with virtual
machines, so have a bridged interface. You will most likely want to
replace br0 in the configuration files with your ethernet
interface. The ppp0 interface is my ADSL modem.

*** Interfaces.
#+begin_src sh :tangle ./configuration_files/shorewall/interfaces :exports none :noweb yes
#
# Shorewall version 4.0 - Sample Interfaces File for two-interface configuration.
# Copyright (C) 2006 by the Shorewall Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# See the file README.txt for further details.
#------------------------------------------------------------------------------
# For information about entries in this file, type "man shorewall-interfaces"
###############################################################################
#ZONE	INTERFACE	BROADCAST	OPTIONS

# My network uses a bridged interface with br0 being the internal interface and ppp0
# the external interface. Note ppp0 is an ADSL modem.
net     ppp0            detect          tcpflags,nosmurfs,routefilter,logmartians
loc     br0            detect           routeback,tcpflags,nosmurfs,routefilter=0,logmartians=0,bridge
road    tun+

#+end_src
*** masq
#+begin_src sh :tangle ./configuration_files/shorewall/masq :exports none :noweb yes
#
# Shorewall version 4.0 - Sample Masq file for two-interface configuration.
# Copyright (C) 2006 by the Shorewall Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# See the file README.txt for further details.
#------------------------------------------------------------------------------
# For information about entries in this file, type "man shorewall-masq"
###############################################################################
#INTERFACE		SOURCE		ADDRESS		PROTO	PORT(S)	IPSEC	MARK
#eth0			10.0.0.0/8,\
#			169.254.0.0/16,\
#			172.16.0.0/12,\
#			192.168.0.0/16

#eth0:0			192.168.0.0/16   217.146.125.41
#eth0			192.168.0.0/24

ppp0			192.168.0.0/24

#+end_src


*** Policy.
#+begin_src sh :tangle ./configuration_files/shorewall/policy :exports none :noweb yes

#
# Shorewall version 4 - Policy File
#
# For information about entries in this file, type "man shorewall-policy"
#
# The manpage is also online at
# http://www.shorewall.net/manpages/shorewall-policy.html
#
###############################################################################
#SOURCE	DEST	POLICY		LOG	LIMIT:		CONNLIMIT:
#				LEVEL	BURST		MASK
$FW     net     ACCEPT
loc	$FW	ACCEPT
$FW	loc	ACCEPT

loc             net             ACCEPT
net             all             DROP            info


# THE FOLLOWING POLICY MUST BE LAST
all             all             REJECT          info

#+end_src
*** Rules.

#+begin_src sh :tangle ./configuration_files/shorewall/rules :exports none :noweb yes
#
# Shorewall version 4.0 - Sample Rules File for two-interface configuration.
# Copyright (C) 2006,2007 by the Shorewall Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# See the file README.txt for further details.
#------------------------------------------------------------------------------
# For information about entries in this file, type "man shorewall-rules"
#############################################################################################################
#ACTION		SOURCE		DEST		PROTO	DEST	SOURCE		ORIGINAL	RATE		USER/	MARK
#							PORT	PORT(S)		DEST		LIMIT		GROUP
#
#	Accept DNS connections from the firewall to the network
#
DNS(ACCEPT)	$FW		net
#
#	Accept SSH connections from the local network for administration
#
SSH(ACCEPT)	loc		$FW
#
#	Allow Ping from the local network
#
Ping(ACCEPT)	loc		$FW

#
# Drop Ping from the "bad" net zone.. and prevent your log from being flooded..
#

#Ping(DROP)	net		$FW

ACCEPT		$FW		loc		icmp
ACCEPT		$FW		net		icmp
#

# Port forwarding for various services.
Web(DNAT)       net		loc:192.168.0.50
8081(DNAT)      net             loc:192.168.0.51
8082(DNAT)      net             loc:192.168.0.51
8083(DNAT)      net             loc:192.168.0.31

IMAPS(DNAT)	net		loc:192.168.0.50
IMAP(DNAT)	net		loc:192.168.0.50
SMTP(DNAT)	net		loc:192.168.0.50
MySQL(DNAT)	net		loc:192.168.0.50

SSH(DNAT)	net		loc:192.168.0.50 TCP 22
6600(DNAT)   net            loc:192.168.0.66 TCP

# Xbox port forwarding.
DNAT        net             loc:192.168.0.48  UDP 88
DNAT        net             loc:192.168.0.48  UDP 3074
DNAT        net             loc:192.168.0.48  UDP 3658
DNAT        net             loc:192.168.0.48  UDP 9000
DNAT        net             loc:192.168.0.48  UDP 6555

DNAT        net             loc:192.168.0.48  TCP 88
DNAT        net             loc:192.168.0.48  TCP 3074
DNAT        net             loc:192.168.0.48  TCP 13505
DNAT        net             loc:192.168.0.48  TCP 31400:31499

# Google Talk.
JabberPlain/ACCEPT    loc      net
JabberSecure/ACCEPT   loc      net

# Squid redirection.
REDIRECT  loc         3128     tcp      www              -          !192.168.0.1


#+end_src

*** Routestopped.
#+begin_src sh :tangle ./configuration_files/shorewall/routestopped :exports none :noweb yes
#
# Shorewall version 4.0 - Sample Routestopped File for two-interface configuration.
# Copyright (C) 2006 by the Shorewall Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# See the file README.txt for further details.
#------------------------------------------------------------------------------
# For information about entries in this file, type "man shorewall-routestopped"
##############################################################################
#INTERFACE	HOST(S)                  OPTIONS
br0

#+end_src

*** shorewall.conf.
#+begin_src sh :tangle ./configuration_files/shorewall/shorewall.conf :exports none :noweb yes
###############################################################################
#
# Shorewall version 4.0 - Sample shorewall.conf for two-interface
#                         configuration.
# Copyright (C) 2006,2007 by the Shorewall Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# See the file README.txt for further details.
#
# For information about the settings in this file, type "man shorewall.conf"
#
# The manpage is also online at
# http://shorewall.net/manpages/shorewall.conf.html
#
###############################################################################
#		       S T A R T U P   E N A B L E D
###############################################################################

STARTUP_ENABLED=Yes

###############################################################################
#		              V E R B O S I T Y
###############################################################################

VERBOSITY=1

###############################################################################
#                              C O M P I L E R
#      (setting this to 'perl' requires installation of Shorewall-perl)
###############################################################################

SHOREWALL_COMPILER=

###############################################################################
#			       L O G G I N G
###############################################################################

LOGFILE=/var/log/messages

STARTUP_LOG=/var/log/shorewall-init.log

LOG_VERBOSITY=2

LOGFORMAT="Shorewall:%s:%s:"

LOGTAGONLY=No

LOGRATE=

LOGBURST=

LOGALLNEW=

BLACKLIST_LOGLEVEL=

MACLIST_LOG_LEVEL=info

TCP_FLAGS_LOG_LEVEL=info

SMURF_LOG_LEVEL=info

LOG_MARTIANS=Yes

###############################################################################
#	L O C A T I O N	  O F	F I L E S   A N D   D I R E C T O R I E S
###############################################################################

IPTABLES=

IP=

TC=

IPSET=

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin:/usr/local/sbin

SHOREWALL_SHELL=/bin/sh

SUBSYSLOCK=

MODULESDIR=

CONFIG_PATH=/etc/shorewall:/usr/share/shorewall

RESTOREFILE=

IPSECFILE=zones

LOCKFILE=

###############################################################################
#		D E F A U L T   A C T I O N S / M A C R O S
###############################################################################

DROP_DEFAULT="Drop"
REJECT_DEFAULT="Reject"
ACCEPT_DEFAULT="none"
QUEUE_DEFAULT="none"
NFQUEUE_DEFAULT="none"

###############################################################################
#                        R S H / R C P  C O M M A N D S
###############################################################################

RSH_COMMAND='ssh ${root}@${system} ${command}'
RCP_COMMAND='scp ${files} ${root}@${system}:${destination}'

###############################################################################
#			F I R E W A L L	  O P T I O N S
###############################################################################

IP_FORWARDING=On

ADD_IP_ALIASES=Yes

ADD_SNAT_ALIASES=Yes

RETAIN_ALIASES=No

TC_ENABLED=Internal

TC_EXPERT=No

CLEAR_TC=Yes

MARK_IN_FORWARD_CHAIN=No

CLAMPMSS=Yes

ROUTE_FILTER=No

DETECT_DNAT_IPADDRS=No

MUTEX_TIMEOUT=60

ADMINISABSENTMINDED=Yes

BLACKLISTNEWONLY=Yes

DELAYBLACKLISTLOAD=No

MODULE_SUFFIX=ko

DISABLE_IPV6=No

BRIDGING=No

DYNAMIC_ZONES=No

PKTTYPE=Yes

NULL_ROUTE_RFC1918=No

MACLIST_TABLE=filter

MACLIST_TTL=

SAVE_IPSETS=No

MAPOLDACTIONS=No

FASTACCEPT=No

IMPLICIT_CONTINUE=No

HIGH_ROUTE_MARKS=No

USE_ACTIONS=Yes

OPTIMIZE=1

EXPORTPARAMS=No

EXPAND_POLICIES=Yes

KEEP_RT_TABLES=No

DELETE_THEN_ADD=Yes

MULTICAST=No

DONT_LOAD=

AUTO_COMMENT=Yes

MANGLE_ENABLED=Yes

USE_DEFAULT_RT=No

RESTORE_DEFAULT_ROUTE=Yes

AUTOMAKE=No

WIDE_TC_MARKS=Yes

TRACK_PROVIDERS=Yes

ZONE2ZONE=2

###############################################################################
#			P A C K E T   D I S P O S I T I O N
###############################################################################

BLACKLIST_DISPOSITION=DROP

MACLIST_DISPOSITION=REJECT

TCP_FLAGS_DISPOSITION=DROP

#LAST LINE -- DO NOT REMOVE

#+end_src

*** zones.
#+begin_src sh :tangle ./configuration_files/shorewall/zones :exports none :noweb yes
#
# Shorewall version 4 - Zones File
#
# For information about this file, type "man shorewall-zones"
#
# The manpage is also online at
# http://www.shorewall.net/manpages/shorewall-zones.html
#
###############################################################################
#ZONE	TYPE		OPTIONS		IN			OUT
#					OPTIONS			OPTIONS
fw	firewall
net	ipv4
loc	ipv4

#+end_src

*** Macros.
Various macros are defined. These are useful shorthand for including
in the rules file. You can just use the macro name instead of  the
whole definition. I name macros according to the port they affect.

**** macro.8080
#+begin_src sh :tangle ./configuration_files/shorewall/macro.8080 :exports none :noweb yes

# This macro handles http via port 8080.
#ACTION SOURCE  DEST    PROTO   DEST    SOURCE  RATE    USER/
#                               PORT(S) PORT(S) LIMIT   GROUP
PARAM   -       -       tcp     8080

#+end_src

**** macro.8081
#+begin_src sh :tangle ./configuration_files/shorewall/macro.8081 :exports none :noweb yes

# This macro handles http via port 8081.
#ACTION SOURCE  DEST    PROTO   DEST    SOURCE  RATE    USER/
#                               PORT(S) PORT(S) LIMIT   GROUP
PARAM   -       -       tcp     8081

#+end_src

**** macro.8082
#+begin_src sh :tangle ./configuration_files/shorewall/macro.8082 :exports none :noweb yes

# This macro handles http via port 8082.
#ACTION SOURCE  DEST    PROTO   DEST    SOURCE  RATE    USER/
#                               PORT(S) PORT(S) LIMIT   GROUP
PARAM   -       -       tcp     8082

#+end_src
**** macro.8083
#+begin_src sh :tangle ./configuration_files/shorewall/macro.8083 :exports none :noweb yes

# This macro handles http via port 8082.
#ACTION SOURCE  DEST    PROTO   DEST    SOURCE  RATE    USER/
#                               PORT(S) PORT(S) LIMIT   GROUP
PARAM   -       -       tcp     8083

#+end_src

**** macro.6600
#+begin_src sh :tangle ./configuration_files/shorewall/macro.6600 :exports none :noweb yes

# This macro handles http via port 8082.
#ACTION SOURCE  DEST    PROTO   DEST    SOURCE  RATE    USER/
#                               PORT(S) PORT(S) LIMIT   GROUP
PARAM   -       -       tcp     6600

#+end_src
